{"version":3,"sources":["logo.svg","aws-exports.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["awsmobile","endpoint","config","aws_cloud_logic_custom","query","gql","App","useQuery","loading","error","data","console","log","className","src","logo","alt","hello","client","ApolloClient","cache","InMemoryCache","link","createHttpLink","uri","AppWithProvider","ApolloProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAAe,MAA0B,iC,wDCe1BA,EAZG,CACd,mBAAsB,YACtB,uBAA0B,CACtB,CACI,KAAQ,SACR,SAAY,6DACZ,OAAU,e,OCFdC,EAAaC,EAAOC,uBAAuB,GAA3CF,SAEFG,EAAQC,YAAH,6DAMX,SAASC,IAAO,IAAD,EACoBC,YAAgBH,GAAzCI,EADK,EACLA,QAASC,EADJ,EACIA,MAAOC,EADX,EACWA,KAExB,OAAIF,IAAYE,EAAa,4CAEzBD,GACFE,QAAQC,IAAI,CAAEH,UACP,2CAIP,qBAAKI,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,6BAAKN,EAAKO,aAMlB,IAAMC,EAAS,IAAIC,IAAa,CAC9BC,MAAO,IAAIC,IACXC,KAAMC,YAAe,CACnBC,IAAKvB,EAAW,eAULwB,EANS,kBACtB,cAACC,EAAA,EAAD,CAAgBR,OAAQA,EAAxB,SACE,cAAC,EAAD,OC9BWS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.64a8b7b8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"eu-west-3\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"apollo\",\n            \"endpoint\": \"https://cn9qummzbf.execute-api.eu-west-3.amazonaws.com/dev\",\n            \"region\": \"eu-west-3\"\n        }\n    ]\n};\n\n\nexport default awsmobile;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { gql, useQuery, ApolloClient, ApolloProvider, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { Hello } from \"./types\";\n\nimport config from \"./aws-exports\";\n\nconst { endpoint } = config.aws_cloud_logic_custom[0];\n\nconst query = gql`\n  query Hello {\n    hello\n  }\n`;\n\nfunction App() {\n  const { loading, error, data } = useQuery<Hello>(query);\n\n  if (loading || !data) return <h3>Loading...</h3>;\n\n  if (error) {\n    console.log({ error });\n    return <h3>Error...</h3>;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>{data.hello}</h1>\n      </header>\n    </div>\n  );\n}\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: createHttpLink({\n    uri: endpoint + \"/graphql\",\n  }),\n});\n\nconst AppWithProvider = () => (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n\nexport default AppWithProvider;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}