{"version":3,"sources":["reportWebVitals.ts","components/RowData.tsx","components/CurrencyItem.tsx","components/MoneyInput.tsx","hooks/useExchangeCurrency.tsx","components/Card.tsx","data/assets/338-3383164_flag-of-switzerland-logo-png-transparent-cross.png","data/assets/Bitcoin-Logo.png","data/assets/european-union-logo-vector.svg","data/currencies.tsx","store/Action.tsx","store/Reducer.tsx","store/State.tsx","store/index.tsx","components/BankCard.tsx","components/BankAccountForm.tsx","components/PaymentForm.tsx","pages/Exchange.tsx","routes.tsx","index.tsx","aws-exports.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RowData","left","right","alignItems","CurrencyItem","props","as","transition","borderRadius","fontSize","fontWeight","bg","color","textAlign","p","_hover","onClick","src","value","img","alt","style","width","ml","symbol","MoneyInput","label","modalLabel","isSearch","handler","allowedCurrencies","setValue","setSymbol","search","setSearch","useControllableState","defaultValue","toString","amount","setAmount","useDisclosure","isOpen","onOpen","onClose","handleSetValue","useCallback","e","target","newVal","parseFloat","isNaN","handleSetSymbol","symb","handleCleanSearch","useEffect","MoneyInputField","maxW","background","mb","display","type","variant","borderWidth","onChange","disabled","rightIcon","MoneyInputModal","isCentered","scrollBehavior","rounded","pb","minH","size","placeholder","direction","map","currency","useExchangeCurrency","initialAmount","initialCurrency","setCurrency","Card","children","height","justifyContent","pt","pr","pl","mt","minHeight","minWidth","closeButton","mr","BTC","btcLogo","fiats","euLogo","chfLogo","tokensFilter","tokens","filter","concat","LowerCase","includes","toLocaleLowerCase","ADD_ORDER","CLEAN_ORDERS","ADD_BANK_ACCOUNT","reducer","state","action","order","payload","orders","account","accounts","initialState","store","createContext","StoreProvider","useReducer","dispatch","Provider","BankCard","borderColor","cursor","BankAccountForm","useContext","formik","useFormik","initialValues","bank","bic","onSubmit","val","ctx","a","resetForm","handleSubmit","id","name","values","email","handleChange","error","touched","Boolean","errors","helperText","iban","fullName","address","w","postalCode","country","isFullWidth","PaymentForm","GET_TOKENS","gql","Exchange","useQuery","data","loading","handlerFrom","handlerTo","amountFrom","currencyFrom","searchFrom","amountTo","currencyTo","useState","setAccount","isFlipped","onToggle","isOpenBankAccountForm","onCloseBankAccountForm","onOpenBankAccountForm","isOpenPaymentForm","onClosePaymentForm","onOpenPaymentForm","cleanAccount","getTokens","isPaying","exchangeCard","bgColor","textColor","colorScheme","bankAccountCard","FaPlus","h","AppRoutes","path","element","NoMatch","to","endpoint","aws_cloud_logic_custom","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f40d8cfa.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Flex, Spacer } from \"@chakra-ui/layout\";\nimport { ResponsiveValue } from \"@chakra-ui/styled-system\";\nimport { ReactNode } from \"react\";\nimport { Property } from \"csstype\";\n\ninterface RowDataProps {\n  left: ReactNode;\n  right: ReactNode;\n  alignItems?: ResponsiveValue<Property.AlignItems>;\n}\n\nexport const RowData = ({ left, right, alignItems }: RowDataProps) => (\n  <Flex alignItems={alignItems}>\n    {left}\n    <Spacer />\n    {right}\n  </Flex>\n);\n","import { Box, Flex, Text } from \"@chakra-ui/layout\";\nimport React from \"react\";\nimport { GetTokensInfo_getTokens } from \"../types\";\n\nexport function CurrencyItem(props: { value: GetTokensInfo_getTokens; onClick: () => void }) {\n  return (\n    <Box\n      as=\"button\"\n      transition=\"all 0.2s cubic-bezier(.08,.52,.52,1)\"\n      borderRadius=\"2px\"\n      fontSize=\"14px\"\n      fontWeight=\"semibold\"\n      bg=\"white\"\n      color=\"gray\"\n      textAlign=\"left\"\n      p={5}\n      _hover={{ bg: \"#ebedf0\" }}\n      onClick={props.onClick}\n    >\n      <Flex alignItems=\"center\">\n        <img src={props.value.img || \"undefined\"} alt=\"\" style={{ width: 30 }} />\n        <Text ml={4}>{props.value.symbol}</Text>\n      </Flex>\n    </Box>\n  );\n}\n","import { Button } from \"@chakra-ui/button\";\nimport { useControllableState, useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { Box, Flex, Text } from \"@chakra-ui/layout\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\nimport { Fragment, useCallback, useEffect } from \"react\";\nimport { FaChevronDown } from \"react-icons/fa\";\nimport { CloseButton } from \"@chakra-ui/close-button\";\nimport { CurrencyItem } from \"./CurrencyItem\";\nimport { GetTokensInfo_getTokens } from \"../types\";\n\nexport type CurrencyHandler = [\n  number,\n  React.Dispatch<React.SetStateAction<number>>,\n  string,\n  React.Dispatch<React.SetStateAction<string>>,\n  string,\n  React.Dispatch<React.SetStateAction<string>>\n];\n\ninterface MoneyInputProps {\n  label: string;\n  disabled?: boolean;\n  modalLabel: string;\n  isSearch?: boolean;\n  handler: CurrencyHandler;\n  allowedCurrencies: GetTokensInfo_getTokens[];\n}\n\nexport const MoneyInput = (props: MoneyInputProps) => {\n  const { label, modalLabel, isSearch, handler, allowedCurrencies } = props;\n  const [value, setValue, symbol, setSymbol, search, setSearch] = handler;\n\n  const [amount, setAmount] = useControllableState<string>({ defaultValue: value.toString() });\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const handleSetValue = useCallback((e: any) => {\n    setAmount(e.target.value);\n    const newVal = parseFloat(e.target.value);\n    if (!isNaN(newVal)) setValue(newVal);\n  }, []);\n\n  const handleSetSymbol = useCallback(\n    (symb: string) => () => {\n      setSymbol(symb);\n      setSearch(\"\");\n      onClose();\n    },\n    [setSymbol, setSearch, onClose]\n  );\n\n  const handleCleanSearch = useCallback(() => {\n    setSearch(\"\");\n  }, [setSearch]);\n\n  useEffect(() => {\n    setAmount(value.toString());\n  }, [value]);\n\n  const MoneyInputField = (\n    <Box maxW=\"sm\" background=\"white\" borderRadius={25} p={5} mb={5}>\n      <Text fontSize=\"13px\" fontWeight=\"300\">\n        {label}\n      </Text>\n      <Box display=\"flex\">\n        <Input type=\"number\" variant=\"unstyled\" borderWidth={0} fontSize={24} fontWeight={300} onChange={handleSetValue} value={amount} disabled={props.disabled} />\n        <Button rightIcon={<FaChevronDown />} background=\"inherit\" onClick={onOpen} disabled={props.disabled}>\n          {symbol}\n        </Button>\n      </Box>\n    </Box>\n  );\n\n  const MoneyInputModal = (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered scrollBehavior=\"inside\">\n      <ModalOverlay />\n      <ModalContent rounded={25} pb={25} minH=\"50vh\">\n        <ModalHeader alignItems=\"center\">{modalLabel}</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          {isSearch && (\n            <InputGroup size=\"md\" mb={8}>\n              <Input placeholder=\"Search\" value={search} onChange={(e) => setSearch(e.target.value)} borderRadius={25} />\n              <InputRightElement width=\"4.5rem\">\n                <CloseButton onClick={handleCleanSearch} />\n              </InputRightElement>\n            </InputGroup>\n          )}\n          <Flex direction=\"column\">\n            {allowedCurrencies.map((currency) => (\n              <CurrencyItem value={currency} onClick={handleSetSymbol(currency.symbol || \"\")} />\n            ))}\n          </Flex>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n\n  return (\n    <Fragment>\n      {MoneyInputField}\n      {MoneyInputModal}\n    </Fragment>\n  );\n};\n","import { useControllableState } from \"@chakra-ui/hooks\";\nimport { CurrencyHandler } from \"../components/MoneyInput\";\n\nexport const useExchangeCurrency = (initialAmount: number, initialCurrency: string): CurrencyHandler => {\n  const [amount, setAmount] = useControllableState({ defaultValue: initialAmount });\n  const [currency, setCurrency] = useControllableState({ defaultValue: initialCurrency });\n  const [search, setSearch] = useControllableState({ defaultValue: \"\" });\n\n  return [amount, setAmount, currency, setCurrency, search, setSearch];\n};\n","import { Flex } from \"@chakra-ui/layout\";\nimport { FC } from \"react\";\n\ninterface CardProps {\n  closeButton?: React.ReactNode;\n}\n\nexport const Card: FC<CardProps> = ({ children, ...props }) => (\n  <Flex height=\"100vh\" justifyContent=\"center\" alignItems=\"flex-start\">\n    <Flex direction=\"column\" background={\"gray.100\"} rounded={25} pt={10} pb={10} pr={5} pl={5} mt=\"15vh\" mb=\"15vh\" minHeight={500} minWidth={400}>\n      {props.closeButton&& <Flex justifyContent=\"right\" mt={-7} mr={-2} mb={5}>{props.closeButton}</Flex>}\n      {children}\n    </Flex>\n  </Flex>\n);\n","export default __webpack_public_path__ + \"static/media/338-3383164_flag-of-switzerland-logo-png-transparent-cross.5c58ee71.png\";","export default __webpack_public_path__ + \"static/media/Bitcoin-Logo.443a278f.png\";","export default __webpack_public_path__ + \"static/media/european-union-logo-vector.88fc18aa.svg\";","import { filter } from \"lodash\";\nimport { GetTokensInfo_getTokens } from \"../types\";\n\nimport chfLogo from \"./assets/338-3383164_flag-of-switzerland-logo-png-transparent-cross.png\";\nimport btcLogo from \"./assets/Bitcoin-Logo.png\";\nimport euLogo from \"./assets/european-union-logo-vector.svg\";\n\nconst BTC = { symbol: \"BTC\", img: btcLogo } as GetTokensInfo_getTokens;\nconst EUR = { symbol: \"EUR\", img: euLogo } as GetTokensInfo_getTokens;\nconst CHF = { symbol: \"CHF\", img: chfLogo } as GetTokensInfo_getTokens;\n\nexport const fiats = [EUR, CHF];\n\nexport const tokensFilter = (tokens: GetTokensInfo_getTokens[], search: string): GetTokensInfo_getTokens[] =>\n  filter([BTC].concat(tokens), (value) => LowerCase(value.symbol).includes(LowerCase(search)));\n\nfunction LowerCase(value: string | null): string {\n  return (value || \"\").toLocaleLowerCase();\n}\n","import { BankAccount, Order } from \"./State\";\n\nexport interface Action {\n  type: string;\n}\n\nexport interface Payload<T> extends Action {\n  payload: T;\n}\n\nexport const ADD_ORDER = \"ADD_ORDER\";\n\nexport function addOrder(payload: Order): Payload<Order> {\n  return {\n    type: ADD_ORDER,\n    payload,\n  };\n}\n\nexport const CLEAN_ORDERS = \"CLEAN_ORDERS\";\n\nexport function cleanOrders(): Action {\n  return {\n    type: CLEAN_ORDERS,\n  };\n}\n\nexport const ADD_BANK_ACCOUNT = \"ADD_BANK_ACCOUNT\";\n\nexport function addBankAccount(payload: BankAccount): Payload<BankAccount> {\n  return {\n    type: ADD_BANK_ACCOUNT,\n    payload,\n  };\n}\n\nexport const CLEAN_BANK_ACCOUNTS = \"CLEAN_BANK_ACCOUNTS\";\n\nexport function cleanBankAccounts(): Action {\n  return {\n    type: CLEAN_ORDERS,\n  };\n}\n\n","import { Reducer } from \"react\";\nimport { Action, ADD_BANK_ACCOUNT, ADD_ORDER, CLEAN_BANK_ACCOUNTS, CLEAN_ORDERS, Payload } from \"./Action\";\nimport { BankAccount, Order, State } from \"./State\";\n\nexport const reducer: Reducer<State, Action> = (state, action) => {\n  switch (action.type) {\n    case ADD_ORDER: {\n      const { payload: order } = action as Payload<Order>;\n      return { ...state, orders: [...state.orders, order] };\n    }\n    case CLEAN_ORDERS: {\n      return { ...state, orders: [] };\n    }\n    case ADD_BANK_ACCOUNT: {\n      const { payload: account } = action as Payload<BankAccount>;\n      return { ...state, accounts: [...state.accounts, account] };\n    }\n    case CLEAN_BANK_ACCOUNTS: {\n      return { ...state, accounts: [] };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","export interface Order {}\n\nexport interface BankAccount {\n  id: string;\n  iban: string;\n  bic: string;\n  bank: string;\n\n  email: string;\n  fullName: string;\n  address: string;\n  postalCode: string;\n  city: string;\n  country: string;\n}\n\nexport interface State {\n  accounts: BankAccount[];\n  orders: Order[];\n}\n\nexport const initialState: State = {\n  accounts: [],\n  orders: [],\n};\n","import { createContext, FunctionComponent, useReducer } from \"react\";\nimport { Action } from \"./Action\";\nimport { reducer } from \"./Reducer\";\nimport { State, initialState } from \"./State\";\n\ninterface StoreType {\n  state: State;\n  dispatch: React.Dispatch<Action>;\n}\nexport const store = createContext({} as StoreType);\n\nconst StoreProvider: FunctionComponent = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <store.Provider value={value}> {children} </store.Provider>;\n};\n\nexport default StoreProvider;\n","import { Box } from \"@chakra-ui/layout\";\n\nexport const BankCard: React.FC<any> = ({ children, ...props }) => (\n  <Box bg=\"white\" borderColor=\"gray.300\" borderRadius={30} pt={3} pb={3} pl={10} pr={10} mb={2} cursor=\"pointer\" {...props}>\n    {children}\n  </Box>\n);\n","import { store } from \"../store\";\nimport { useContext } from \"react\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, ModalProps } from \"@chakra-ui/modal\";\nimport { Formik, FormikHelpers, Field, Form, useFormik } from \"formik\";\nimport { BankAccount } from \"../store/State\";\nimport { addBankAccount } from \"../store/Action\";\nimport { FormControl, FormHelperText, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Button } from \"@chakra-ui/button\";\nimport { Flex } from \"@chakra-ui/layout\";\n\nexport const BankAccountForm: React.FC<ModalProps> = ({ isOpen, onClose, children }) => {\n  const { dispatch } = useContext(store);\n\n  const formik = useFormik({\n    initialValues: {\n      bank: \"TRANSFER WISE\",\n      bic: \"TRWIBA1XXX\",\n    } as BankAccount,\n    onSubmit: async (val, ctx) => {\n      dispatch(addBankAccount(val));\n      ctx.resetForm();\n      onClose();\n    },\n  });\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent rounded={25} pb={25} minH=\"50vh\">\n        <ModalHeader alignItems=\"center\">{children}</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <form onSubmit={formik.handleSubmit}>\n            <FormControl id=\"email\">\n              <FormLabel>Email address</FormLabel>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n              />\n              <FormHelperText>We'll never share your email.</FormHelperText>\n            </FormControl>\n            <FormControl id=\"iban\" pt={5}>\n              <FormLabel>IBAN</FormLabel>\n              <Input\n                id=\"iban\"\n                name=\"iban\"\n                type=\"text\"\n                value={formik.values.iban}\n                onChange={formik.handleChange}\n                error={formik.touched.iban && Boolean(formik.errors.iban)}\n                helperText={formik.touched.iban && formik.errors.iban}\n              />\n              <FormHelperText>We'll never share this information.</FormHelperText>\n            </FormControl>\n\n            <FormControl id=\"fullName\" pt={5}>\n              <FormLabel>Full name</FormLabel>\n              <Input\n                id=\"fullName\"\n                name=\"fullName\"\n                type=\"text\"\n                value={formik.values.fullName}\n                onChange={formik.handleChange}\n                error={formik.touched.fullName && Boolean(formik.errors.fullName)}\n                helperText={formik.touched.fullName && formik.errors.fullName}\n              />\n            </FormControl>\n            <FormControl id=\"address\" pt={5}>\n              <FormLabel>Address</FormLabel>\n              <Input\n                id=\"address\"\n                name=\"address\"\n                type=\"text\"\n                value={formik.values.address}\n                onChange={formik.handleChange}\n                error={formik.touched.address && Boolean(formik.errors.address)}\n                helperText={formik.touched.address && formik.errors.address}\n              />\n            </FormControl>\n            <Flex>\n              <FormControl id=\"postalCode\" pt={5} w={250} mr={5}>\n                <FormLabel>ZIP/Postal Code</FormLabel>\n                <Input\n                  id=\"postalCode\"\n                  name=\"postalCode\"\n                  type=\"text\"\n                  value={formik.values.postalCode}\n                  onChange={formik.handleChange}\n                  error={formik.touched.postalCode && Boolean(formik.errors.postalCode)}\n                  helperText={formik.touched.postalCode && formik.errors.postalCode}\n                />\n              </FormControl>\n              <FormControl id=\"country\" pt={5}>\n                <FormLabel>Country</FormLabel>\n                <Input\n                  id=\"country\"\n                  name=\"country\"\n                  type=\"text\"\n                  value={formik.values.country}\n                  onChange={formik.handleChange}\n                  error={formik.touched.country && Boolean(formik.errors.country)}\n                  helperText={formik.touched.country && formik.errors.country}\n                />\n              </FormControl>\n            </Flex>\n            <Button mt={10} isFullWidth type=\"submit\">\n              Submit\n            </Button>\n          </form>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { store } from \"../store\";\nimport { useContext } from \"react\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, ModalProps } from \"@chakra-ui/modal\";\n\nexport const PaymentForm: React.FC<ModalProps> = ({ isOpen, onClose, children }) => {\n  const { dispatch } = useContext(store);\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent rounded={25} pb={25} minH=\"50vh\">\n        <ModalHeader alignItems=\"center\">{children}</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody></ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import { Button } from \"@chakra-ui/button\";\nimport { Box, Center, Divider, Flex, Spacer, Text } from \"@chakra-ui/layout\";\nimport { RowData } from \"../components/RowData\";\nimport { MoneyInput } from \"../components/MoneyInput\";\nimport { useExchangeCurrency } from \"../hooks/useExchangeCurrency\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Card } from \"../components/Card\";\nimport { fiats, tokensFilter } from \"../data/currencies\";\nimport { store } from \"../store\";\nimport { Fragment, useCallback, useContext, useState } from \"react\";\nimport { BankAccount } from \"../store/State\";\nimport { FaPlus } from \"react-icons/fa\";\nimport Icon from \"@chakra-ui/icon\";\nimport { BankCard } from \"../components/BankCard\";\nimport { BankAccountForm } from \"../components/BankAccountForm\";\nimport { PaymentForm } from \"../components/PaymentForm\";\nimport { CloseButton } from \"@chakra-ui/close-button\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/client\";\nimport { GetTokensInfo } from \"../types\";\nimport { filter } from \"lodash\";\n\nconst GET_TOKENS = gql`\n  query GetTokensInfo {\n    getTokens {\n      symbol\n      img\n    }\n  }\n`;\n\nexport default function Exchange() {\n  const { state } = useContext(store);\n  const { data, loading, error } = useQuery<GetTokensInfo>(GET_TOKENS);\n\n  const handlerFrom = useExchangeCurrency(0, \"BTC\");\n  const handlerTo = useExchangeCurrency(200, \"EUR\");\n\n  const [amountFrom, __, currencyFrom, ___, searchFrom] = handlerFrom;\n  const [amountTo, ____, currencyTo] = handlerTo;\n  const [account, setAccount] = useState<BankAccount | null>(null);\n\n  const { isOpen: isFlipped, onToggle } = useDisclosure();\n  const { isOpen: isOpenBankAccountForm, onClose: onCloseBankAccountForm, onOpen: onOpenBankAccountForm } = useDisclosure();\n  const { isOpen: isOpenPaymentForm, onClose: onClosePaymentForm, onOpen: onOpenPaymentForm } = useDisclosure();\n\n  const cleanAccount = useCallback(() => setAccount(null), [setAccount]);\n\n  const tokens = data ? data.getTokens : [];\n  const isPaying = account !== null;\n\n  const exchangeCard = (\n    <Card>\n      {!isPaying && (\n        <Fragment>\n          <MoneyInput handler={handlerFrom} label=\"From\" modalLabel={\"Select crypto\"} allowedCurrencies={tokensFilter(tokens, searchFrom)} isSearch disabled={loading} />\n          <MoneyInput handler={handlerTo} label=\"To\" modalLabel={\"Select currency\"} allowedCurrencies={fiats} />\n        </Fragment>\n      )}\n\n      {isPaying ? (\n        <Button bgColor=\"white\" textColor=\"gray.500\" rounded={25} mb={5} onClick={cleanAccount}>\n          Back\n        </Button>\n      ) : (\n        <Button colorScheme=\"teal\" rounded={25} mb={5} onClick={onToggle}>\n          Exchange\n        </Button>\n      )}\n\n      <Box background={\"gray.200\"} maxW=\"sm\" borderRadius={25} p={5}>\n        <RowData\n          left={\n            <Text fontSize=\"12px\" fontWeight=\"400\" textAlign=\"left\">\n              Rate\n            </Text>\n          }\n          right={\n            <Text fontSize=\"12px\" fontWeight=\"300\" textAlign=\"left\">\n              ~0.8458236 {currencyFrom}/{currencyTo}\n            </Text>\n          }\n        />\n        <RowData\n          left={\n            <Text fontSize=\"12px\" fontWeight=\"400\" textAlign=\"left\">\n              Exchange fee\n            </Text>\n          }\n          right={\n            <Text fontSize=\"12px\" fontWeight=\"300\" textAlign=\"left\">\n              20 {currencyFrom}\n            </Text>\n          }\n        />\n        <RowData\n          left={\n            <Text fontSize=\"12px\" fontWeight=\"400\" textAlign=\"left\">\n              Slippage tolerance\n            </Text>\n          }\n          right={\n            <Text fontSize=\"12px\" fontWeight=\"300\" textAlign=\"left\">\n              1%\n            </Text>\n          }\n        />\n        <Text fontSize=\"12px\" fontWeight=\"300\" textAlign=\"center\" mt={3} p={3}>\n          ORDER ROUTING\n        </Text>\n        <RowData\n          left={\n            <Text fontSize=\"12px\" fontWeight=\"400\" textAlign=\"left\">\n              {amountFrom} {currencyFrom} &gt; {amountTo} {currencyTo}\n            </Text>\n          }\n          right={\n            <Text fontSize=\"10px\" fontWeight=\"300\" textAlign=\"left\">\n              via\n            </Text>\n          }\n        />\n\n        <Divider borderColor=\"gray.400\" mt={2} mb={2} />\n        <RowData\n          left={\n            <Text fontSize=\"12px\" fontWeight=\"400\" textAlign=\"left\">\n              0.03036954 {currencyFrom} &gt; 100 {currencyTo}\n            </Text>\n          }\n          right={\n            <Text fontSize=\"10px\" fontWeight=\"300\" textAlign=\"left\">\n              via\n            </Text>\n          }\n        />\n      </Box>\n      {isPaying && (\n        <Fragment>\n          <Box background={\"gray.200\"} maxW=\"sm\" borderRadius={25} p={5} mt={5}>\n            <Text fontWeight=\"800\" fontSize=\"15\" textColor=\"gray.600\" mb={2}>\n              {account.iban}\n            </Text>\n            <RowData\n              alignItems=\"flex-end\"\n              left={\n                <Text fontWeight=\"600\" fontSize=\"12\" textColor=\"gray.500\" mr={5}>\n                  {account.bic}\n                </Text>\n              }\n              right={\n                <Text fontWeight=\"600\" fontSize=\"8\" textColor=\"gray.400\">\n                  {account.bank}\n                </Text>\n              }\n            />\n          </Box>\n          <Button colorScheme=\"blue\" rounded={25} mt={5} onClick={onOpenPaymentForm}>\n            Pay\n          </Button>\n        </Fragment>\n      )}\n    </Card>\n  );\n\n  const bankAccountCard = (\n    <Card closeButton={<CloseButton onClick={onToggle} />}>\n      <Flex direction=\"column\">\n        <BankCard onClick={onOpenBankAccountForm}>\n          <Center p={5}>\n            <Icon as={FaPlus} color=\"gray.400\" w={7} h={7} />\n          </Center>\n        </BankCard>\n        {state.accounts.map((a) => (\n          <BankCard\n            key={a.id}\n            onClick={() => {\n              setAccount(a);\n              onToggle();\n            }}\n          >\n            <Text fontWeight=\"800\" fontSize=\"25\" textColor=\"gray.500\" mb={2}>\n              {a.iban}\n            </Text>\n            <RowData\n              alignItems=\"flex-end\"\n              left={\n                <Text fontWeight=\"600\" fontSize=\"15\" textColor=\"gray.400\" mr={5}>\n                  {a.bic}\n                </Text>\n              }\n              right={\n                <Text fontWeight=\"600\" fontSize=\"10\" textColor=\"gray.300\">\n                  {a.bank}\n                </Text>\n              }\n            />\n          </BankCard>\n        ))}\n      </Flex>\n    </Card>\n  );\n\n  return (\n    <Fragment>\n      <BankAccountForm isOpen={isOpenBankAccountForm} onClose={onCloseBankAccountForm}>\n        Add account\n      </BankAccountForm>\n      <PaymentForm isOpen={isOpenPaymentForm} onClose={onClosePaymentForm}>\n        Pay\n      </PaymentForm>\n      <ReactCardFlip isFlipped={isFlipped}>\n        {exchangeCard}\n        {bankAccountCard}\n      </ReactCardFlip>\n    </Fragment>\n  );\n}\n","import { HashRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport Exchange from \"./pages/Exchange\";\n\nexport const AppRoutes = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/exchange\" element={<Exchange />} />\n        <Route path=\"*\" element={<NoMatch />} />\n      </Routes>\n    </Router>\n  );\n};\n\nconst NoMatch = () => <Navigate to=\"exchange\" />;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { AppRoutes } from \"./routes\";\nimport StoreProvider from \"./store\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\nimport config from \"./aws-exports\";\n\nconst { endpoint } = config.aws_cloud_logic_custom[0];\n\nconst client = new ApolloClient({ uri: endpoint + \"/graphql\", cache: new InMemoryCache() });\n\nconst App = () => (\n  <ApolloProvider client={client}>\n    <AppRoutes />\n  </ApolloProvider>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <StoreProvider>\n        <App />\n      </StoreProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"eu-west-3\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"c2fapollo\",\n            \"endpoint\": \"https://b74p1r2mt4.execute-api.eu-west-3.amazonaws.com/dev\",\n            \"region\": \"eu-west-3\"\n        }\n    ]\n};\n\n\nexport default awsmobile;\n"],"sourceRoot":""}