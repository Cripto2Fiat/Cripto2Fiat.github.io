{"version":3,"sources":["reportWebVitals.ts","pages/Exchange.tsx","routes.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RowData","left","right","alignItems","CurrencyItem","props","as","transition","borderRadius","fontSize","fontWeight","bg","color","textAlign","p","_hover","onClick","value","MoneyInput","label","modalLabel","isSearch","handler","allowedCurrencies","setValue","symbol","setSymbol","search","setSearch","useControllableState","defaultValue","toString","amount","setAmount","useDisclosure","isOpen","onOpen","onClose","handleSetValue","useCallback","e","target","newVal","parseFloat","isNaN","handleSetSymbol","symb","handleCleanSearch","useEffect","maxW","background","mb","display","type","variant","borderWidth","onChange","rightIcon","isCentered","rounded","pb","minH","size","placeholder","width","direction","map","currency","fiats","useExchangeCurrency","initialAmount","initialCurrency","setCurrency","Exchange","handlerFrom","handlerTo","amountFrom","setAmountFrom","currencyFrom","searchFrom","amountTo","setAmountTo","currencyTo","height","justifyContent","pt","pr","pl","mt","minWidth","filter","toLocaleLowerCase","includes","colorScheme","borderColor","AppRoutes","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53bd63d0.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Button } from \"@chakra-ui/button\";\nimport { useControllableState, useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { Box, Divider, Flex, Spacer, Stack, Text } from \"@chakra-ui/layout\";\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from \"@chakra-ui/modal\";\nimport React, { Fragment, ReactNode, useCallback, useEffect } from \"react\";\nimport { FaCalculator, FaChevronDown } from \"react-icons/fa\";\nimport { filter } from \"lodash\";\nimport Icon from \"@chakra-ui/icon\";\nimport { CloseButton } from \"@chakra-ui/close-button\";\n\ninterface InfoViewProps {\n  left: ReactNode;\n  right: ReactNode;\n}\n\nconst RowData = ({ left, right }: InfoViewProps) => (\n  <Flex alignItems=\"center\">\n    {left}\n    <Spacer />\n    {right}\n  </Flex>\n);\n\ntype CurrencyHandler = [\n  number,\n  React.Dispatch<React.SetStateAction<number>>,\n  string,\n  React.Dispatch<React.SetStateAction<string>>,\n  string,\n  React.Dispatch<React.SetStateAction<string>>\n];\nconst CurrencyItem = (props: { value: string; onClick: () => void }) => (\n  <Box\n    as=\"button\"\n    transition=\"all 0.2s cubic-bezier(.08,.52,.52,1)\"\n    borderRadius=\"2px\"\n    fontSize=\"14px\"\n    fontWeight=\"semibold\"\n    bg=\"white\"\n    color=\"gray\"\n    textAlign=\"left\"\n    p={5}\n    _hover={{ bg: \"#ebedf0\" }}\n    onClick={props.onClick}\n  >\n    {props.value}\n  </Box>\n);\n\nconst MoneyInput = (props: { label: string; modalLabel: string; isSearch?: boolean; handler: CurrencyHandler; allowedCurrencies: string[] }) => {\n  const { label, modalLabel, isSearch, handler, allowedCurrencies } = props;\n  const [value, setValue, symbol, setSymbol, search, setSearch] = handler;\n\n  const [amount, setAmount] = useControllableState<string>({ defaultValue: value.toString() });\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const handleSetValue = useCallback((e: any) => {\n    setAmount(e.target.value);\n    const newVal = parseFloat(e.target.value);\n    if (!isNaN(newVal)) setValue(newVal);\n  }, []);\n\n  const handleSetSymbol = useCallback(\n    (symb: string) => () => {\n      setSymbol(symb);\n      setSearch(\"\");\n      onClose();\n    },\n    [setSymbol, setSearch, onClose]\n  );\n\n  const handleCleanSearch = useCallback(() => {\n    setSearch(\"\");\n  }, [setSearch]);\n\n  useEffect(() => {\n    setAmount(value.toString());\n  }, [value]);\n\n  return (\n    <Fragment>\n      <Box maxW=\"sm\" background=\"white\" borderRadius={25} p={5} mb={5}>\n        <Text fontSize=\"13px\" fontWeight=\"300\">\n          {label}\n        </Text>\n        <Box display=\"flex\">\n          <Input type=\"number\" variant=\"unstyled\" borderWidth={0} fontSize={24} fontWeight={300} onChange={handleSetValue} value={amount} />\n          <Button rightIcon={<FaChevronDown />} background=\"inherit\" onClick={onOpen}>\n            {symbol}\n          </Button>\n        </Box>\n      </Box>\n      <Modal isOpen={isOpen} onClose={onClose} isCentered>\n        <ModalOverlay />\n        <ModalContent rounded={25} pb={25} minH=\"50vh\">\n          <ModalHeader alignItems=\"center\">{modalLabel}</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            {isSearch && (\n              <InputGroup size=\"md\" mb={8}>\n                <Input placeholder=\"Search\" value={search} onChange={(e) => setSearch(e.target.value)} borderRadius={25} />\n                <InputRightElement width=\"4.5rem\">\n                  <CloseButton onClick={handleCleanSearch} />\n                </InputRightElement>\n              </InputGroup>\n            )}\n            <Flex direction=\"column\">\n              {allowedCurrencies.map((currency) => (\n                <CurrencyItem value={currency} onClick={handleSetSymbol(currency)} />\n              ))}\n            </Flex>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </Fragment>\n  );\n};\n\nconst fiats = [\"EUR\", \"CHF\"];\nconst tokens = (search: string) =>\n  filter([\"BTC\", \"ETH\", \"SOL\", \"CHIA\", \"SHIB\", \"MATIC\", \"BEG\", \"BMA\", \"BAM\"], (value) => value.toLocaleLowerCase().includes(search.toLocaleLowerCase()));\n\nconst useExchangeCurrency = (initialAmount: number, initialCurrency: string): CurrencyHandler => {\n  const [amount, setAmount] = useControllableState({ defaultValue: initialAmount });\n  const [currency, setCurrency] = useControllableState({ defaultValue: initialCurrency });\n  const [search, setSearch] = useControllableState({ defaultValue: \"\" });\n\n  return [amount, setAmount, currency, setCurrency, search, setSearch];\n};\n\nexport default function Exchange() {\n  const handlerFrom = useExchangeCurrency(0, \"BTC\");\n  const handlerTo = useExchangeCurrency(200, \"EUR\");\n\n  const [amountFrom, setAmountFrom, currencyFrom, _, searchFrom] = handlerFrom;\n  const [amountTo, setAmountTo, currencyTo] = handlerTo;\n\n  return (\n    <Flex height=\"100vh\" justifyContent=\"center\" alignItems=\"flex-start\" borderWidth=\"1px\">\n      <Flex direction=\"column\" background={\"gray.100\"} rounded={25} pt={10} pb={10} pr={5} pl={5} mt={250} minWidth={400}>\n        <MoneyInput handler={handlerFrom} label=\"From\" modalLabel={\"Select crypto\"} isSearch allowedCurrencies={tokens(searchFrom)} />\n        <MoneyInput handler={handlerTo} label=\"To\" modalLabel={\"Select currency\"} allowedCurrencies={fiats} />\n\n        <Button\n          colorScheme=\"teal\"\n          rounded={25}\n          mb={5}\n          onClick={() => {\n            setAmountTo(400);\n            setAmountFrom(200);\n          }}\n        >\n          Exchange\n        </Button>\n        <Box background={\"gray.200\"} maxW=\"sm\" borderRadius={25} p={5}>\n          <RowData\n            left={\n              <Text fontSize=\"12px\" fontWeight=\"400\" textAlign=\"left\">\n                Rate\n              </Text>\n            }\n            right={\n              <Text fontSize=\"12px\" fontWeight=\"300\" textAlign=\"left\">\n                ~0.8458236 {currencyFrom}/{currencyTo}\n              </Text>\n            }\n          />\n          <RowData\n            left={\n              <Text fontSize=\"12px\" fontWeight=\"400\" textAlign=\"left\">\n                Exchange fee\n              </Text>\n            }\n            right={\n              <Text fontSize=\"12px\" fontWeight=\"300\" textAlign=\"left\">\n                20 {currencyFrom}\n              </Text>\n            }\n          />\n          <RowData\n            left={\n              <Text fontSize=\"12px\" fontWeight=\"400\" textAlign=\"left\">\n                Slippage tolerance\n              </Text>\n            }\n            right={\n              <Text fontSize=\"12px\" fontWeight=\"300\" textAlign=\"left\">\n                1%\n              </Text>\n            }\n          />\n          <Text fontSize=\"12px\" fontWeight=\"300\" textAlign=\"center\" mt={3} p={3}>\n            ORDER ROUTING\n          </Text>\n          <RowData\n            left={\n              <Text fontSize=\"12px\" fontWeight=\"400\" textAlign=\"left\">\n                {amountFrom} {currencyFrom} &gt; {amountTo} {currencyTo}\n              </Text>\n            }\n            right={\n              <Text fontSize=\"10px\" fontWeight=\"300\" textAlign=\"left\">\n                via\n              </Text>\n            }\n          />\n\n          <Divider borderColor=\"gray.400\" mt={2} mb={2}/>\n          <RowData\n            left={\n              <Text fontSize=\"12px\" fontWeight=\"400\" textAlign=\"left\">\n                0.03036954 {currencyFrom} &gt; 100 {currencyTo}\n              </Text>\n            }\n            right={\n              <Text fontSize=\"10px\" fontWeight=\"300\" textAlign=\"left\">\n                via\n              </Text>\n            }\n          />\n        </Box>\n      </Flex>\n    </Flex>\n  );\n}\n","import { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Exchange from \"./pages/Exchange\";\n\nexport const AppRoutes = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/exchange\" element={<Exchange />} />\n      </Routes>\n    </Router>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { AppRoutes } from \"./routes\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <AppRoutes />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}